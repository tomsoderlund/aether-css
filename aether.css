/* ===== Aether CSS: https://github.com/tomsoderlund/aether-css ===== */

/* ----- Reset ----- */

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  -webkit-text-size-adjust: none;
  touch-action: manipulation;
}

/* ----- Colors ----- */

.color-background-bg { background-color: #F5F5F5; }
.color-text-fg { color: rgba(0, 0, 0, 0.96); }
.color-action-primary-bg { background-color: #00CED1; }
.color-action-primary-fg { color: #00CED1; }
.color-action-secondary-bg { background-color: #663399; }
.color-action-secondary-fg { color: #663399; }
.color-header-bg { background-color: #663399; }

.color-information-bg { background-color: rgba(255, 255, 255, 0.96); }
.color-warning-bg { background-color: #FFFBE6; }
.color-error-bg { background-color: #ED7070; color: white; }
.color-success-bg { background-color: #D6FFC8; }

/* ----- Layout ----- */

body {
  background-color: #F5F5F5;
  color: rgba(0, 0, 0, 0.96);
}

/* Main - margin:auto */
main {
  margin: 0 auto;
  padding: 1em 0;
  width: 80%;
  max-width: 800px;
  min-height: calc(100vh - 3rem);
}

@media only screen and (max-width: 480px) {
  main {
    width: 100%;
    max-width: none;
    padding: 1em;
  }
}

main.has-header {
  padding-top: calc(1em + 3rem);
}

main.has-footer {
  padding-bottom: calc(1em + 2.2rem);
}

main h1:first-child {
  margin-top: 0.3em;
}

/* Header */
header,
footer {
  background-color: #433998;
  color: white;
  position: fixed;
  z-index: 1000;
  width: 100%;
  left: 0;
  top: 0;
  height: 3rem;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  /* iOS Web Apps */
  -webkit-user-select: none;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
}

footer {
  top: unset;
  bottom: 0;
  height: 2.2rem;
  font-size: 0.8em;
}

/* ----- Typography ----- */

body {
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;
  font-size: 16px;
  font-weight: 300;
}

p {
  margin: 1em 0;
  line-height: 1.4em;
}

/* List */
ol {
  list-style-type: decimal;
}

li {
  margin-left: 1.5em;
  margin-bottom: 0.4em;
}

h1, h2, h3, h4, h5 {
  line-height: 1.1em;
  margin: 1.1em 0 0.4em;
  font-weight: 500;
}

/* ----- Elements ----- */

/* Links */
a {
  color: dodgerblue;
  text-decoration: none;
  border-bottom: 1px dotted dodgerblue;
  transition: all 0.2s;
  cursor: pointer;
}
a:hover {
  border-bottom-style: solid;
  filter: brightness(125%);
}

/* Button */
button,
.button {
  position: relative;
  color: white;
  background-color: rgba(0, 0, 0, 0.31);
  border: 1px solid rgba(0, 0, 0, 0.12);
  display: inline-block;
  cursor: pointer;
  user-select: none;
  -webkit-user-select: none;
  white-space: nowrap;
  overflow: hidden;
  line-height: normal;
  font-weight: normal;
  text-align: center;
}
button:focus:not(:disabled):not(:hover),
.button:focus:not(:disabled):not(:hover) {
  border: 1px solid rgba(0, 0, 0, 0.42);
}
button:hover:not(:disabled),
.button:hover:not(:disabled) {
  filter: invert(50%) !important;
}
.button:hover:not(:disabled) {
  border-bottom: none;
}
button:hover:active,
.button:hover:active {
  transition: all 0.05s;
  filter: invert(70%) !important;
}
button:disabled,
.button:disabled {
  cursor: initial;
  filter: grayscale(100%);
  opacity: 0.5;
}
a.button {
  text-decoration: none;
}

button.secondary:not(:disabled) {
  filter: invert(10%);
}

.no-button {
  background: none;
  box-shadow: none;
  width: unset;
  min-width: unset;
  color: inherit;
  padding: 0;
  margin: 0;
}

/* fieldset flexbox bug */
fieldset,
.fieldset {
  border: none;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  margin: 1em 0;
}

fieldset label,
.fieldset label {
  color: rgba(0, 0, 0, 0.42);
  font-size: 0.75em;
  text-transform: uppercase;
  margin-bottom: 0.625em;
}

legend {
  font-weight: bold;
}

/* Input and Dropdown Menu */
input:not([type="radio"]):not([type="checkbox"]):not([type="color"]):not([type="range"]),
.input,
textarea,
select {
  -webkit-appearance: none;
  resize: none;
  color: inherit;
  background-color: white;
  border: 1px solid rgba(0, 0, 0, 0.26);
  box-shadow: none;
  font-weight: inherit;
}
input:not([type="radio"]):not([type="checkbox"]):not([type="color"]):not([type="range"])::placeholder,
textarea::placeholder {
  color: rgba(0, 0, 0, 0.26);
}
input:not([type="radio"]):not([type="checkbox"]):not([type="color"]):not([type="range"]):focus,
.input:focus,
textarea:focus,
select:focus {
  border: 1px solid rgba(0, 0, 0, 0.42);
}
input:not([type="radio"]):not([type="checkbox"]):not([type="color"]):not([type="range"]):hover:not(:disabled):not(:focus),
.input:hover:not(:disabled):not(:focus),
textarea:hover:not(:disabled):not(:focus),
select:hover:not(:disabled):not(:focus) {
  border: 1px solid rgba(0, 0, 0, 0.42);
}
input:not([type="radio"]):not([type="checkbox"]):not([type="color"]):not([type="range"]):read-only,
textarea:read-only {
  color: rgba(0, 0, 0, 0.42);  
}
input:not([type="radio"]):not([type="checkbox"]):not([type="color"]):not([type="range"]):disabled,
.input:disabled,
textarea:disabled,
select:disabled {
  background-color: transparent;
  color: rgba(0, 0, 0, 0.42);  
}

/* Input & Button shared */

button,
.button,
input:not([type="radio"]):not([type="checkbox"]),
.input,
textarea,
select {
  border-radius: 2px;
  box-sizing: border-box;
  font-family: inherit;
  font-size: inherit;
  outline: none;
  padding: 1em;
  min-width: 20em;
  transition: all 0.1s;
}

@media only screen and (max-width: 480px) {
  button,
  .button,
  input:not([type="radio"]):not([type="checkbox"]),
  .input,
  textarea,
  select {
    width: 100%;
    margin: 0.2em 0;
  }
}

input[type="radio"],
input[type="checkbox"] {
  margin-left: 1em;
}

input[type="radio"]:first-child,
input[type="checkbox"]:first-child {
  margin-left: unset;
}

.radio-wrapper,
.checkbox-wrapper {
  margin-right: 1em;
}

.radio-wrapper > label,
.checkbox-wrapper > label {
  margin-left: 0.3em;
  color: inherit;
  font-size: inherit;
  text-transform: inherit;
  margin-bottom: inherit;
}

/* Tag */
.tag {
  display: inline-block;
  cursor: default;
  padding: 0.6em 1em;
  background-color: deepskyblue;
  color: white;
  font-size: 0.9em;
  padding: 0.2em 0.7em;
  margin-right: 0.2em;
  margin-bottom: 0.4em;
  border-radius: 2em;
  border: 1px solid rgba(0,0,0, 0.2);
  text-decoration: none;
  transition: all 0.2s;
}
.tag.selectable {
  cursor: pointer;
}
.tag.selectable:hover:not(.disabled) {
  filter: brightness(115%);
}
.tag.selected {
  background-color: #4a87bf;
  border: 1px solid #4a87bf;
}
.tag.new {
  background-color: limegreen;
}

.tag .x-button {
  cursor: pointer;
  border: none;
  background: none;
  padding: 0.1em;
  margin: 0;
  margin-left: 0.2em;
  color: white;
}
.tag .x-button:before {
  content: 'âœ–';
}

/* Table */
table {
  border-collapse: collapse;
}

td, th {
  border: 1px solid #ddd;
  padding: 0.5em;
  vertical-align: top;
}

thead tr {
  background-color: #ccc;
}

tr:nth-child(2n+0) {
  background-color: #eee;
}

/* Horisontal rule */
hr {
  border: 0;
  height: 1px;
  margin: 1em 0;
  background: rgba(0, 0, 0, 0.2);
}

/* ----- Custom elements ----- */

/* Flexbox */
.flex {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: flex-start;
}

.flex.column {
  flex-direction: column;
}

.flex > * {
  flex: 1;
  width: 100%;
  margin-right: 1em;
  min-width: unset;
}
.flex > *:last-child {
  margin-right: unset;
}

@media only screen and (max-width: 480px) {
  .flex {
    flex-direction: column;
  }
  .flex > * {
    margin-right: unset;
  }
}

.notification {
  padding: 1em;
  border-radius: 2px;
}

.circle-menu-button {
  box-shadow: none;
  width: unset;
  min-width: unset;
  padding: 0;
  margin: 0;
  width: 2.5rem;
  height: 2.5rem;
  border-radius: 2.5rem;
  position: fixed;
  left: 1rem;
  top: 1rem;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.circle-menu-button.right {
  left: unset;
  right: 1rem;
}
.circle-menu-button.bottom {
  top: unset;
  bottom: 1rem;
}
